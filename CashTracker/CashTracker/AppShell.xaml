<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:CashTracker.Views"
       Title="CashTracker"
       x:Class="CashTracker.AppShell"
       FlyoutBackgroundColor="{StaticResource PrimaryColor}">

    <Shell.Resources>
        <ResourceDictionary>

            <Style TargetType="Entry">
                <Setter Property="PlaceholderColor" Value="{StaticResource SecondaryTextColor}"/>
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>

            <Style TargetType="DatePicker">
                <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>

            <Style TargetType="Frame">
                <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="BorderColor" Value="{StaticResource SecondaryColor}"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HasShadow" Value="True"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}"/>
                                    <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource SecondaryColor}" />
                                    <Setter Property="TextColor" Value="{StaticResource SecondaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>


            
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.ForegroundColor" Value="{StaticResource SecondaryColor}" /> <!--hamburger icon-->
                <Setter Property="Shell.TitleColor" Value="{StaticResource PrimaryTextColor}" />
                <Setter Property="Shell.DisabledColor" Value="{StaticResource PrimaryDisabledColor}" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="{StaticResource SecondaryColor}"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="{StaticResource TertiaryTextColor}"/>
                <Setter Property="Shell.TabBarTitleColor" Value="{StaticResource PrimaryTextColor}"/> <!--selected tab text color-->
                <Setter Property="Shell.FlyoutBackgroundColor" Value="{StaticResource PrimaryColor}"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

 
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource PageBackgroundColor}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PrimaryTextColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource SecondaryColor}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PrimaryTextColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PrimaryTextColor}" />
                                    <Setter TargetName="FlyoutItemLayout" Property="BackgroundColor" Value="{StaticResource PrimaryColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <FlyoutItem Title="Jobs" Icon="icon_about.png">
        <Tab Title="Add Stat" Icon="icon_about.png">
            <ShellContent Title="AddStat" Route="AddStatPage" ContentTemplate="{DataTemplate local:AddStatPage}" />
        </Tab>
        <Tab Title="About" Icon="icon_about.png">
            <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
        </Tab>
    </FlyoutItem>

    <MenuItem Text="Add Job" StyleClass="MenuItemLayoutStyle" Command="{Binding AddJobCommand}"/>
    <MenuItem Text="Toggle Theme" StyleClass="MenuItemLayoutStyle" Command="{Binding ToggleThemeCommand}"/>

     <!--This header appears at the top of the Flyout.
     https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header-->
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="{StaticResource PrimaryColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                </Grid.RowDefinitions>
                <Label Text="Cash Tracker" TextColor="{StaticResource PrimaryTextColor}" FontAttributes="Bold"
                       FontSize="20" HorizontalOptions="Center" VerticalOptions="Center" />
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
